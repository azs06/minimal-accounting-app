"""Initial database schema setup

Revision ID: 49a532904e02
Revises: 
Create Date: 2025-06-02 16:22:49.533314

"""
from alembic import op
import sqlalchemy as sa
from datetime import datetime


# revision identifiers, used by Alembic.
revision = '49a532904e02'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('username', sa.String(
                        length=80), nullable=False),
                    sa.Column('email', sa.String(length=120), nullable=False),
                    sa.Column('password_hash', sa.String(
                        length=256), nullable=False),
                    sa.Column('role', sa.String(length=50), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('username')
                    )
    op.create_table('companies',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('name', sa.String(length=150), nullable=False),
                    sa.Column('owner_id', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('company_users',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('company_id', sa.Integer(), nullable=False),
                    sa.Column('role_in_company', sa.String(
                        length=50), nullable=False),
                    sa.Column('joined_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['company_id'], ['companies.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('user_id', 'company_id')
                    )
    op.create_table('employees',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('first_name', sa.String(
                        length=100), nullable=False),
                    sa.Column('last_name', sa.String(
                        length=100), nullable=False),
                    sa.Column('email', sa.String(length=120), nullable=True),
                    sa.Column('phone_number', sa.String(
                        length=50), nullable=True),
                    sa.Column('position', sa.String(
                        length=100), nullable=True),
                    sa.Column('hire_date', sa.Date(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('company_id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['company_id'], ['companies.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('user_id')
                    )
    op.create_table('expenses',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('description', sa.Text(), nullable=False),
                    sa.Column('amount', sa.Float(), nullable=False),
                    sa.Column('date_incurred', sa.Date(), nullable=False),
                    sa.Column('category', sa.String(
                        length=100), nullable=True),
                    sa.Column('vendor', sa.String(length=100), nullable=True),
                    sa.Column('notes', sa.Text(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('company_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['company_id'], ['companies.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('income',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('description', sa.Text(), nullable=False),
                    sa.Column('amount', sa.Float(), nullable=False),
                    sa.Column('date_received', sa.Date(), nullable=False),
                    sa.Column('category', sa.String(
                        length=100), nullable=True),
                    sa.Column('notes', sa.Text(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('company_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['company_id'], ['companies.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('inventory_items',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('name', sa.String(length=200), nullable=False),
                    sa.Column('description', sa.Text(), nullable=True),
                    sa.Column('sku', sa.String(length=100), nullable=True),
                    sa.Column('purchase_price', sa.Float(), nullable=True),
                    sa.Column('sale_price', sa.Float(), nullable=False),
                    sa.Column('quantity_on_hand',
                              sa.Integer(), nullable=False),
                    sa.Column('unit_of_measure', sa.String(
                        length=50), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('company_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['company_id'], ['companies.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('company_id', 'name',
                                        name='uq_inventory_company_name'),
                    sa.UniqueConstraint('company_id', 'sku',
                                        name='uq_inventory_company_sku')
                    )
    op.create_table('invoices',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('invoice_number', sa.String(
                        length=100), nullable=False),
                    sa.Column('customer_name', sa.String(
                        length=200), nullable=False),
                    sa.Column('customer_email', sa.String(
                        length=120), nullable=True),
                    sa.Column('customer_address', sa.Text(), nullable=True),
                    sa.Column('issue_date', sa.Date(), nullable=False),
                    sa.Column('due_date', sa.Date(), nullable=True),
                    sa.Column('total_amount', sa.Float(), nullable=False),
                    sa.Column('status', sa.String(length=50), nullable=False),
                    sa.Column('notes', sa.Text(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('company_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['company_id'], ['companies.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('company_id', 'invoice_number',
                                        name='uq_invoice_company_invoice_number')
                    )
    op.create_table('invoice_items',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('invoice_id', sa.Integer(), nullable=False),
                    sa.Column('item_id', sa.Integer(), nullable=True),
                    sa.Column('item_description', sa.Text(), nullable=False),
                    sa.Column('quantity', sa.Integer(), nullable=False),
                    sa.Column('unit_price', sa.Float(), nullable=False),
                    sa.Column('line_total', sa.Float(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['invoice_id'], ['invoices.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['item_id'], ['inventory_items.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('salaries',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('employee_id', sa.Integer(), nullable=False),
                    sa.Column('payment_date', sa.Date(), nullable=False),
                    sa.Column('gross_amount', sa.Float(), nullable=False),
                    sa.Column('deductions', sa.Float(), nullable=True),
                    sa.Column('net_amount', sa.Float(), nullable=False),
                    sa.Column('payment_period_start',
                              sa.Date(), nullable=True),
                    sa.Column('payment_period_end', sa.Date(), nullable=True),
                    sa.Column('notes', sa.Text(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('recorded_by_user_id',
                              sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['employee_id'], ['employees.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['recorded_by_user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('salaries')
    op.drop_table('invoice_items')
    op.drop_table('invoices')
    op.drop_table('inventory_items')
    op.drop_table('income')
    op.drop_table('expenses')
    op.drop_table('employees')
    op.drop_table('company_users')
    op.drop_table('companies')
    op.drop_table('users')
    # ### end Alembic commands ###
